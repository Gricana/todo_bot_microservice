from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.input import TextInput
from aiogram_dialog.widgets.kbd import Button, Row, Calendar, Radio
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.text import Jinja
from dialogs import comments
from handlers.tasks import (
    delete_task_data,
    get_task_data,
    list_tasks,
    create_new_task,
    save_task_field,
    save_task_deadline_time,
    save_task_deadline_date,
)
from states.tasks import TaskStates
from utils.categories import parse_categories
from utils.status import TaskStatus


tasks_dialog = Dialog(
    Window(
        Jinja("{{ text|safe }}"),
        Button(
            Const("‚ûï –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞"),
            id="new_task",
            on_click=lambda c, b, d: create_new_task(d),
        ),
        state=TaskStates.LIST,
        getter=list_tasks,
    ),
    Window(
        Jinja(
            "\U0001f4cc <b>{{ task.title }}</b>\n\n"
            "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: <b>{{ task.created_at }}</b>\n\n"
            "\U0001f4dd –û–ø–∏—Å–∞–Ω–∏–µ: {{ task.description }}\n"
            "–î—ç–¥–ª–∞–π–Ω: <b>{{ task.due_date }}</b>\n"
            "–°—Ç–∞—Ç—É—Å: <b>{{ task.status }}</b>\n"
            "üè∑ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {{ task.categories }}",
        ),
        Row(
            Button(
                Const("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å"),
                id="edit",
                on_click=lambda c, b, d: d.switch_to(TaskStates.EDIT_FIELD_SELECTION),
            ),
            Button(
                Const("üóë –£–¥–∞–ª–∏—Ç—å"),
                id="delete",
                on_click=lambda c, b, d: d.switch_to(TaskStates.CONFIRM_DELETE),
            ),
        ),
        Button(
            Const("üí¨ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏"),
            id="view_comments",
            on_click=lambda c, b, d: d.start(
                comments.CommentStates.LIST, {"task_id": d.start_data["task_id"]}
            ),
        ),
        Button(
            Const("üîô –ù–∞–∑–∞–¥"),
            id="back",
            on_click=lambda c, b, d: d.switch_to(TaskStates.LIST),
        ),
        state=TaskStates.DETAILS,
        getter=get_task_data,
    ),
    Window(
        Const("–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:"),
        Row(
            Button(
                Const("‚úèÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ"),
                id="edit_title",
                on_click=lambda c, b, d: d.switch_to(TaskStates.EDIT_TITLE),
            ),
            Button(
                Const("‚úèÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ"),
                id="edit_desc",
                on_click=lambda c, b, d: d.switch_to(TaskStates.EDIT_DESCRIPTION),
            ),
        ),
        Row(
            Button(
                Const("üìÖ –î–µ–¥–ª–∞–π–Ω"),
                id="edit_deadline",
                on_click=lambda c, b, d: d.switch_to(TaskStates.EDIT_DEADLINE_DATE),
            ),
            Button(
                Const("üîÑ –°—Ç–∞—Ç—É—Å"),
                id="edit_status",
                on_click=lambda c, b, d: d.switch_to(TaskStates.EDIT_STATUS),
            ),
        ),
        Row(
            Button(
                Const("üè∑ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏"),
                id="edit_categories",
                on_click=lambda c, b, d: d.switch_to(TaskStates.EDIT_CATEGORIES),
            ),
        ),
        state=TaskStates.EDIT_FIELD_SELECTION,
    ),
    # Editing window for the task
    Window(
        Const("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏:"),
        TextInput(
            id="edit_title_input",
            on_success=lambda m, w, d, text: save_task_field(d, "title", text),
        ),
        state=TaskStates.EDIT_TITLE,
    ),
    # Editing window descriptions
    Window(
        Const("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏:"),
        TextInput(
            id="edit_desc_input",
            on_success=lambda m, w, d, text: save_task_field(d, "description", text),
        ),
        state=TaskStates.EDIT_DESCRIPTION,
    ),
    # Editing window status
    Window(
        Const("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:"),
        Radio(
            checked_text=Format("{item[1]}"),
            unchecked_text=Format("{item[1]}"),
            item_id_getter=lambda item: item[0],
            items=TaskStatus.human_readable_list(),
            id="status_select",
            on_click=lambda m, w, d, status: save_task_field(d, "status", status),
        ),
        state=TaskStates.EDIT_STATUS,
    ),
    # Window for editing the dedeline date
    Window(
        Const("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –¥–µ–¥–ª–∞–π–Ω–∞:"),
        Calendar(
            id="edit_deadline_date_picker",
            on_click=lambda c, b, d, date: save_task_deadline_date(d, date),
        ),
        state=TaskStates.EDIT_DEADLINE_DATE,
    ),
    # Window for editing deadline time
    Window(
        Const("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –¥–µ–¥–ª–∞–π–Ω–∞ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM):"),
        TextInput(
            id="edit_deadline_time_input",
            on_success=lambda m, w, d, text: save_task_deadline_time(d, text),
        ),
        state=TaskStates.EDIT_DEADLINE_TIME,
    ),
    # Editing Problem Editing Window
    Window(
        Const("–í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: –†–∞–±–æ—Ç–∞, –õ–∏—á–Ω–æ–µ):"),
        TextInput(
            id="edit_categories_input",
            on_success=lambda m, w, d, text: save_task_field(
                d, "categories", parse_categories(text)
            ),
        ),
        state=TaskStates.EDIT_CATEGORIES,
    ),
    Window(
        Const("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É?"),
        Row(
            Button(
                Const("‚úÖ –î–∞"),
                id="confirm_delete",
                on_click=lambda c, b, d: delete_task_data(
                    d, d.middleware_data["state"]
                ),
            ),
            Button(
                Const("‚ùå –ù–µ—Ç"),
                id="cancel",
                on_click=lambda c, b, d: d.switch_to(TaskStates.DETAILS),
            ),
        ),
        state=TaskStates.CONFIRM_DELETE,
    ),
)
